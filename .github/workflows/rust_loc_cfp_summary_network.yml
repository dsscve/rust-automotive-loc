name: Rust LOC + CFP Analysis with Network I/O (Async Excluded)

on:
  workflow_dispatch:       # manual trigger
  schedule:
    - cron: "0 4 * * 1"    # optional: every Monday at 04:00 UTC

jobs:
  analyze:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 git
          cargo install tokei

      - name: Prepare work directory
        run: mkdir -p work

      - name: Clone repos and run tokei
        run: |
          echo "repo,rust_files,rust_code,rust_comments,rust_blanks" > rust_loc_results.csv
          while read -r repo; do
            [[ -z "$repo" ]] && continue
            echo "Processing $repo..."
            dir="work/$(echo "$repo" | tr / _)"
            git clone --depth 1 "https://github.com/$repo.git" "$dir" --quiet || continue
            tokei "$dir" --output json > "$dir/tokei.json"
            python3 - "$repo" "$dir/tokei.json" <<'PY'
import json, sys
repo = sys.argv[1]; path = sys.argv[2]
try:
    with open(path) as f: data = json.load(f)
    rust = data.get("Rust") or data.get("rust")
    if rust:
        print(f"{repo},{rust.get('files',0)},{rust.get('code',0)},{rust.get('comments',0)},{rust.get('blanks',0)}")
    else:
        print(f"{repo},0,0,0,0")
except Exception:
    print(f"{repo},0,0,0,0")
PY
          done < repos.txt >> rust_loc_results.csv

      - name: Estimate CFP and Summary Stats (Network I/O, Async Excluded)
        run: python3 scripts/analyze_loc_cfp_network.py

      - name: Upload LOC + CFP + Summary
        uses: actions/upload-artifact@v4
        with:
          name: rust-loc-cfp-summary-network
          path: rust_loc_results_with_summary_network.csv

name: Rust LOC Analysis

on:
  workflow_dispatch:   # manual trigger
  schedule:
    - cron: "0 3 * * 1"  # optional: every Monday at 03:00 UTC

jobs:
  count-loc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 git
          cargo install tokei

      - name: Prepare work directory
        run: mkdir -p work

      - name: Run tokei on listed repos
  run: |
    echo "repo,rust_files,rust_code,rust_comments,rust_blanks" > rust_loc_results.csv
    while read -r repo; do
      [[ -z "$repo" ]] && continue
      echo "Processing $repo..."
      dir="work/$(echo "$repo" | tr / _)"
      git clone --depth 1 "https://github.com/$repo.git" "$dir" --quiet || continue
      tokei "$dir" --output json > "$dir/tokei.json"
      python3 - "$repo" <<'PY'
import json
import sys

repo = sys.argv[1]
path = f"work/{repo.replace('/', '_')}/tokei.json"

try:
    with open(path) as f:
        data = json.load(f)
    rust = data.get("Rust") or data.get("rust")
    if rust:
        print(f"{repo},{rust.get('files',0)},{rust.get('code',0)},{rust.get('comments',0)},{rust.get('blanks',0)}")
    else:
        print(f"{repo},0,0,0,0")
except Exception:
    print(f"{repo},0,0,0,0")
PY
    done < repos.txt >> rust_loc_results.csv
